name: Java CD with Gradle

on:
  pull_request:
    types:
      - closed

permissions:
  contents: read

jobs:
  if_merge:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up admin-api application.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./admin-api/src/main/resources/application.yml
        env:
          jasypt.password: ${{ secrets.JASYPT_PASSWORD }}

      - name: Set up alert-api application.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./alert-api/src/main/resources/application.yml
        env:
          spring.data.mongodb.uri: ${{ secrets.MONGO_URI }}
          spring.datasource.url: ${{ secrets.LOCAL_DB_URL }}
          spring.datasource.username: ${{ secrets.LOCAL_DB_HOST }}
          spring.datasource.password: ${{ secrets.LOCAL_DB_PASSWORD }}
          spring.security.jwt.secret: ${{ secrets.JWT_SECRET_KEY }}
          kafka.url: ${{ secrets.KAFKA_URL }}
          custom.domain.image.baseUrl: ${{ secrets.BASE_URL }}

      - name: Build admin-api with Gradle
        run: |
          cd admin-api
          ./gradlew clean build -x test

      - name: Build alert-api with Gradle
        run: |
          cd alert-api
          ./gradlew clean build

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: admin-api Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-admin ./admin-api

      - name: alert-api Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-alert ./alert-api

      - name: admin-api DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-admin

      - name: alert-api DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-alert

  deploy:
    needs: if-merge
    runs-on: ubuntu-latest
    steps:
      - name: Deploy and Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-admin
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-alert
            sudo docker stop $(sudo docker ps --filter "ancestor=${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-admin" -q) 2>/dev/null || true
            sudo docker stop $(sudo docker ps --filter "ancestor=${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-alert" -q) 2>/dev/null || true
            sudo docker run --name admin --rm -d -p 8500:8500 ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-admin
            sudo docker run --name alert --rm -d -p 8503:8503 ${{ secrets.DOCKERHUB_USERNAME }}/kernelsquare-alert
            sudo docker system prune -f
